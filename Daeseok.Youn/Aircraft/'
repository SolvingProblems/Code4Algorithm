#include <iostream>
#include <string>
#include <vector>
#include <cmath>

using namespace std;

class Aircraft {
public:
    string nearMiss(vector<int> p1, vector<int> v1,
                    vector<int> p2, vector<int> v2, int R)
    {
        if (p1.size() != 3 || v1.size() != 3 || p2.size() != 3 ||
            v2.size() != 3) {
            return "NO";
        }

        int time = 1, i = 0;
        double currDistance = 0.0;
        double preDistance = 0.0;

        while (i < 10) {
            currDistance = getDistance(p1, v1, p2, v2, time);
            cout << "currDistance : " << currDistance << endl;
            if ( R > (int)currDistance ) {
                return "YES";
            }

            if (preDistance != 0.0 && currDistance > preDistance) {
                cout << "preDistance : " << preDistance << " currDistance : " << currDistance << endl;
                return "NO";
            }else
                preDistance = currDistance;
            i++;
        }

        return "NO";
    }

    double getDistance(vector<int> &p1, vector<int> v1,
                     vector<int> &p2, vector<int> v2, int time)
    {
        int i = 0;
        double result = 0.0;

        for (i = 0; i < p1.size(); i++) {
            p1.at(i) = p1.at(i) + v1.at(i) * time;
            p2.at(i) = p2.at(i) + v2.at(i) * time;
        }

        for (i = 0; i < p1.size(); i++) {
            result += pow((double)(p1.at(i) - p2.at(i)), 2);
        }

        return sqrt(result);
    }
};

int main(void)
{
    Aircraft ac;

    int p1[3] = {15, 50, 5};
    int v1[3] = {25, 1, 5};

    int p2[3] = {161, 102, 9};
    int v2[3] = {-10, -10, -1};

    int R = 10;
    vector<int> p1vec;
    vector<int> p2vec;
    vector<int> v1vec;
    vector<int> v2vec;

    for (int i = 0; i < 3; i++) {
        p1vec.push_back(p1[i]);
        p2vec.push_back(p2[i]);
        v1vec.push_back(v1[i]);
        v2vec.push_back(v2[i]);
    }

    cout << "start" << endl;
    cout << ac.nearMiss(p1vec, v1vec, p2vec, v2vec, R) << endl;

    return 0;
}
